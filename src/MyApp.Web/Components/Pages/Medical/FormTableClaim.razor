@using MyApp.Application.DTOs.Medical

@if (Claims?.Any() == false)
{
    <p class="text-muted">No Claims found.</p>
}
else
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Form ID</th>
                <th>Insured ID Number</th>
                <th>Patient Name</th>
                <th>Insurance Program</th>
                <th>Total Charge</th>
                <th>Amount Paid</th>
                <th>Created Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var claim in Claims!)
            {
                <tr>
                    <td>@claim.FormId</td>
                    <td>@claim.InsuredIdNumber</td>
                    <td>@($"{claim.Patient.FirstName} {claim.Patient.LastName}")</td>
                    <td>@claim.InsuranceProgram</td>
                    <td>@claim.TotalCharge.ToString("C")</td>
                    <td>@claim.AmountPaid.ToString("C")</td>
                    <td>@claim.CreatedDate.ToShortDateString()</td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="() => OnEdit.InvokeAsync(claim.FormId)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => OnDelete.InvokeAsync(claim)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public List<ClaimDto>? Claims { get; set; }

    [Parameter]
    public EventCallback<int> OnEdit { get; set; }

    [Parameter]
    public EventCallback<ClaimDto> OnDelete { get; set; }
}
