@using MyApp.Shared.Services
@using MyApp.Shared.DTOs
@using MyApp.Application.DTOs.Medical
@inject IStateService StateService

@code {
    [Parameter]
    public required AddressDto Address { get; set; }

    private List<StateDto> states = new List<StateDto>();

    protected override void OnInitialized()
    {
        states = StateService.GetStates();
    }
}

<div class="card mb-3">
    <div class="card-header">
        <h5 class="card-title">Address</h5>
    </div>
    <div class="card-body">
        <div class="mb-3 form-floating">
            <InputText id="street" class="form-control" @bind-Value="Address.Street" />
            <label for="street">Address 1</label>
            <ValidationMessage For="@(() => Address.Street)" />
        </div>
        <div class="mb-3 form-floating">
            <InputText id="city" class="form-control" @bind-Value="Address.City" />
            <label for="city">City</label>
            <ValidationMessage For="@(() => Address.City)" />
        </div>
        <div class="mb-3 form-floating">
            <InputSelect id="state" class="form-select" @bind-Value="Address.State">
                <option value="">Select State</option>
                @foreach (var state in states)
                {
                    <option value="@state.Value">@state.Description</option>
                }
            </InputSelect>
            <label for="state">State</label>
            <ValidationMessage For="@(() => Address.State)" />
        </div>
        <div class="mb-3 form-floating">
            <InputText id="zip" class="form-control" @bind-Value="Address.ZipCode" />
            <label for="zip">Zip</label>
            <ValidationMessage For="@(() => Address.ZipCode)" />
        </div>
        <div class="mb-3 form-floating">
            <InputText id="phone" class="form-control" @bind-Value="Address.Phone" />
            <label for="phone">Phone</label>
            <ValidationMessage For="@(() => Address.Phone)" />
        </div>
    </div>
</div>
