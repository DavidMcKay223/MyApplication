@page "/albums"
@rendermode InteractiveServer
@using MyApp.Application.DTOs.Music
@using MyApp.Application.UseCases.Music
@inject IAlbumUseCases AlbumUseCases

<h3>Albums</h3>

<button class="btn btn-primary mb-3" @onclick="AddAlbum">Add New Album</button>

@if (albums == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Artist</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var album in albums)
            {
                <tr>
                    <td>@album.Id</td>
                    <td>@album.Artist</td>
                    <td>
                        <button class="btn btn-sm btn-warning" @onclick="() => EditAlbum(album.Id)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteAlbum(album.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- Edit Modal -->
@if (showEditDialog)
{
    <div class="modal show" style="display:block; background: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@(selectedAlbum?.Id == 0 ? "Add Album" : "Edit Album")</h5>
                    <button type="button" class="close" @onclick="CancelEdit">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="artist">Artist</label>
                        <input type="text" class="form-control" id="artist" @bind="selectedAlbum.Artist" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
                    <button type="button" class="btn btn-primary" @onclick="SaveAlbum">Save</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<AlbumDto>? albums;
    private AlbumDto? selectedAlbum = new AlbumDto() { Artist = "" };
    private bool showEditDialog;

    protected override async Task OnInitializedAsync()
    {
        albums = await AlbumUseCases.GetAllAlbumsAsync();
    }

    private void AddAlbum()
    {
        selectedAlbum = new AlbumDto { Id = 0, Artist = "" };
        showEditDialog = true;
    }

    private async void EditAlbum(int id)
    {
        selectedAlbum = await AlbumUseCases.GetAlbumByIdAsync(id);
        showEditDialog = true;
    }

    private async void DeleteAlbum(int id)
    {
        await AlbumUseCases.DeleteAlbumAsync(id);
        albums = await AlbumUseCases.GetAllAlbumsAsync();
    }

    private async Task SaveAlbum()
    {
        if (selectedAlbum!.Id == 0)
        {
            await AlbumUseCases.CreateAlbumAsync(new CreateAlbumDto { Artist = selectedAlbum.Artist });
        }
        else
        {
            await AlbumUseCases.UpdateAlbumAsync(selectedAlbum.Id, new UpdateAlbumDto { Artist = selectedAlbum.Artist });
        }

        albums = await AlbumUseCases.GetAllAlbumsAsync();
        showEditDialog = false;
    }

    private void CancelEdit()
    {
        showEditDialog = false;
    }
}
